{"ast":null,"code":"import { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Service/my-ser.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/tree\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nfunction FilesBarComponent_mat_tree_node_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-tree-node\", 3)(1, \"mat-icon\", 4);\n    i0.ɵɵtext(2, \"note\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"button\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const node_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", node_r2.name, \" \");\n  }\n}\nfunction FilesBarComponent_mat_tree_node_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-tree-node\", 3)(1, \"mat-icon\", 4);\n    i0.ɵɵtext(2, \"folder\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"button\", 6)(5, \"mat-icon\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const node_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", node_r3.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"Toggle \" + node_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.treeControl.isExpanded(node_r3) ? \"expand_more\" : \"chevron_right\", \" \");\n  }\n}\n//רשימה זמנית\nconst TREE_DATA = [{\n  name: 'Fruit',\n  children: [{\n    name: 'Apple'\n  }, {\n    name: 'Banana'\n  }, {\n    name: 'Fruit loops'\n  }]\n}, {\n  name: 'Vegetables',\n  children: [{\n    name: 'Green',\n    children: [{\n      name: 'Broccoli'\n    }, {\n      name: 'Brussels sprouts'\n    }]\n  }, {\n    name: 'Orange',\n    children: [{\n      name: 'Pumpkins'\n    }, {\n      name: 'Carrots'\n    }]\n  }]\n}];\nclass FilesBarComponent {\n  constructor(myServe, route) {\n    this.myServe = myServe;\n    this.route = route;\n    this.allListFile = [];\n    this._transformer = (node, level) => {\n      return {\n        expandable: !!node.children && node.children.length > 0,\n        name: node.name,\n        level: level\n      };\n    };\n    this.treeControl = new FlatTreeControl(node => node.level, node => node.expandable);\n    this.treeFlattener = new MatTreeFlattener(this._transformer, node => node.level, node => node.expandable, node => node.children);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.location = \"\";\n    this.hasChild = (_, node) => node.expandable;\n    this.dataSource.data = TREE_DATA;\n  }\n  ngOnInit() {\n    this.allListFile = [];\n    this.myServe.SendLocationServe(this.location).subscribe(data => {\n      this.dataSource.data = data.children;\n    }, err => {\n      alert(err.message);\n    });\n  }\n  static #_ = this.ɵfac = function FilesBarComponent_Factory(t) {\n    return new (t || FilesBarComponent)(i0.ɵɵdirectiveInject(i1.MySerService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilesBarComponent,\n    selectors: [[\"app-files-bar\"]],\n    inputs: {\n      location: \"location\"\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[3, \"dataSource\", \"treeControl\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\", \"matTreeNodeDefWhen\"], [\"matTreeNodePadding\", \"\"], [\"matListItemIcon\", \"\"], [\"mat-icon-button\", \"\", \"disabled\", \"\"], [\"mat-icon-button\", \"\", \"matTreeNodeToggle\", \"\"], [1, \"mat-icon-rtl-mirror\"]],\n    template: function FilesBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"files-bar works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-tree\", 0);\n        i0.ɵɵtemplate(3, FilesBarComponent_mat_tree_node_3_Template, 5, 1, \"mat-tree-node\", 1);\n        i0.ɵɵtemplate(4, FilesBarComponent_mat_tree_node_4_Template, 7, 3, \"mat-tree-node\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matTreeNodeDefWhen\", ctx.hasChild);\n      }\n    },\n    dependencies: [i3.MatTreeNodeDef, i3.MatTreeNodePadding, i3.MatTreeNodeToggle, i3.MatTree, i3.MatTreeNode, i4.MatIcon, i5.MatIconButton],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { FilesBarComponent };","map":{"version":3,"names":["FlatTreeControl","MatTreeFlatDataSource","MatTreeFlattener","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","node_r2","name","node_r3","ɵɵattribute","ctx_r1","treeControl","isExpanded","TREE_DATA","children","FilesBarComponent","constructor","myServe","route","allListFile","_transformer","node","level","expandable","length","treeFlattener","dataSource","location","hasChild","_","data","ngOnInit","SendLocationServe","subscribe","err","alert","message","ɵɵdirectiveInject","i1","MySerService","i2","ActivatedRoute","_2","selectors","inputs","decls","vars","consts","template","FilesBarComponent_Template","rf","ctx","ɵɵtemplate","FilesBarComponent_mat_tree_node_3_Template","FilesBarComponent_mat_tree_node_4_Template","ɵɵproperty"],"sources":["C:\\Users\\IMOE001\\Desktop\\nechama\\myProject\\myProject\\src\\app\\Components\\files-bar\\files-bar.component.ts","C:\\Users\\IMOE001\\Desktop\\nechama\\myProject\\myProject\\src\\app\\Components\\files-bar\\files-bar.component.html"],"sourcesContent":["import { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component, Input } from '@angular/core';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\n// import {MatIconModule} from '@angular/material/icon';\n// import {MatButtonModule} from '@angular/material/button';\nimport { ActivatedRoute } from '@angular/router';\nimport { MySerService } from '../../Service/my-ser.service';\n\n//הגדרת הרשימה\ninterface listFileObj {\n  name: string;\n  type?: string;\n  children?: listFileObj[];\n}\n//רשימה זמנית\nconst TREE_DATA: listFileObj[] = [\n  {\n    name: 'Fruit',\n    children: [{ name: 'Apple' }, { name: 'Banana' }, { name: 'Fruit loops' }],\n  },\n  {\n    name: 'Vegetables',\n    children: [\n      {\n        name: 'Green',\n        children: [{ name: 'Broccoli' }, { name: 'Brussels sprouts' }],\n      },\n      {\n        name: 'Orange',\n        children: [{ name: 'Pumpkins' }, { name: 'Carrots' }],\n      },\n    ],\n  },\n];\n\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n@Component({\n  selector: 'app-files-bar',\n  templateUrl: './files-bar.component.html',\n  styleUrls: ['./files-bar.component.css'],\n\n})\nexport class FilesBarComponent {\n\n  public allListFile: string[] = [];\n\n  private _transformer = (node: listFileObj, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      level: level,\n    };\n  };\n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level,\n    node => node.expandable,\n  );\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  @Input() location: string = \"\";\n  constructor(private myServe: MySerService, private route: ActivatedRoute) {\n     this.dataSource.data = TREE_DATA;\n  }\n  thisNode:a\n  ngOnInit() {\n    this.allListFile = [];\n    this.myServe.SendLocationServe(this.location).subscribe(\n      data => {\n        this.dataSource.data = <any>(data).children;\n      },\n      err => {\n        alert(err.message);\n      }\n    );\n  }\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n}\n","<p>files-bar works!</p>\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding> \n      <!-- use a disabled button to provide padding for tree leaf -->\n       <mat-icon matListItemIcon>note</mat-icon>\n      <button mat-icon-button disabled></button>\n      {{node.name}}\n    </mat-tree-node>\n\n    <!-- This is the tree node template for expandable nodes -->\n     <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n     <mat-icon matListItemIcon>folder</mat-icon>\n     {{node.name}}\n      <button mat-icon-button matTreeNodeToggle\n              [attr.aria-label]=\"'Toggle ' + node.name\">\n        <mat-icon class=\"mat-icon-rtl-mirror\">\n          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n        </mat-icon>\n      </button>\n    </mat-tree-node>\n  </mat-tree>\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,mBAAmB;AAEnD,SAASC,qBAAqB,EAAEC,gBAAgB,QAAQ,wBAAwB;;;;;;;;;ICC5EC,EAAA,CAAAC,cAAA,uBAA6D;IAEhCD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAW;IAC1CH,EAAA,CAAAI,SAAA,gBAA0C;IAC1CJ,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAgB;;;;IADdH,EAAA,CAAAK,SAAA,GACF;IADEL,EAAA,CAAAM,kBAAA,MAAAC,OAAA,CAAAC,IAAA,MACF;;;;;IAGCR,EAAA,CAAAC,cAAA,uBAA4E;IAClDD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;IAC3CH,EAAA,CAAAE,MAAA,GACC;IAAAF,EAAA,CAAAC,cAAA,gBACkD;IAE9CD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;;IALdH,EAAA,CAAAK,SAAA,GACC;IADDL,EAAA,CAAAM,kBAAA,MAAAG,OAAA,CAAAD,IAAA,MACC;IACQR,EAAA,CAAAK,SAAA,GAAyC;IAAzCL,EAAA,CAAAU,WAAA,2BAAAD,OAAA,CAAAD,IAAA,CAAyC;IAE7CR,EAAA,CAAAK,SAAA,GACF;IADEL,EAAA,CAAAM,kBAAA,MAAAK,MAAA,CAAAC,WAAA,CAAAC,UAAA,CAAAJ,OAAA,yCACF;;;ADJR;AACA,MAAMK,SAAS,GAAkB,CAC/B;EACEN,IAAI,EAAE,OAAO;EACbO,QAAQ,EAAE,CAAC;IAAEP,IAAI,EAAE;EAAO,CAAE,EAAE;IAAEA,IAAI,EAAE;EAAQ,CAAE,EAAE;IAAEA,IAAI,EAAE;EAAa,CAAE;CAC1E,EACD;EACEA,IAAI,EAAE,YAAY;EAClBO,QAAQ,EAAE,CACR;IACEP,IAAI,EAAE,OAAO;IACbO,QAAQ,EAAE,CAAC;MAAEP,IAAI,EAAE;IAAU,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAkB,CAAE;GAC9D,EACD;IACEA,IAAI,EAAE,QAAQ;IACdO,QAAQ,EAAE,CAAC;MAAEP,IAAI,EAAE;IAAU,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAS,CAAE;GACrD;CAEJ,CACF;AAOD,MAMaQ,iBAAiB;EA0B5BC,YAAoBC,OAAqB,EAAUC,KAAqB;IAApD,KAAAD,OAAO,GAAPA,OAAO;IAAwB,KAAAC,KAAK,GAALA,KAAK;IAxBjD,KAAAC,WAAW,GAAa,EAAE;IAEzB,KAAAC,YAAY,GAAG,CAACC,IAAiB,EAAEC,KAAa,KAAI;MAC1D,OAAO;QACLC,UAAU,EAAE,CAAC,CAACF,IAAI,CAACP,QAAQ,IAAIO,IAAI,CAACP,QAAQ,CAACU,MAAM,GAAG,CAAC;QACvDjB,IAAI,EAAEc,IAAI,CAACd,IAAI;QACfe,KAAK,EAAEA;OACR;IACH,CAAC;IAED,KAAAX,WAAW,GAAG,IAAIf,eAAe,CAC/ByB,IAAI,IAAIA,IAAI,CAACC,KAAK,EAClBD,IAAI,IAAIA,IAAI,CAACE,UAAU,CACxB;IAED,KAAAE,aAAa,GAAG,IAAI3B,gBAAgB,CAClC,IAAI,CAACsB,YAAY,EACjBC,IAAI,IAAIA,IAAI,CAACC,KAAK,EAClBD,IAAI,IAAIA,IAAI,CAACE,UAAU,EACvBF,IAAI,IAAIA,IAAI,CAACP,QAAQ,CACtB;IAED,KAAAY,UAAU,GAAG,IAAI7B,qBAAqB,CAAC,IAAI,CAACc,WAAW,EAAE,IAAI,CAACc,aAAa,CAAC;IACnE,KAAAE,QAAQ,GAAW,EAAE;IAiB9B,KAAAC,QAAQ,GAAG,CAACC,CAAS,EAAER,IAAqB,KAAKA,IAAI,CAACE,UAAU;IAf7D,IAAI,CAACG,UAAU,CAACI,IAAI,GAAGjB,SAAS;EACnC;EAEAkB,QAAQA,CAAA;IACN,IAAI,CAACZ,WAAW,GAAG,EAAE;IACrB,IAAI,CAACF,OAAO,CAACe,iBAAiB,CAAC,IAAI,CAACL,QAAQ,CAAC,CAACM,SAAS,CACrDH,IAAI,IAAG;MACL,IAAI,CAACJ,UAAU,CAACI,IAAI,GAASA,IAAI,CAAEhB,QAAQ;IAC7C,CAAC,EACDoB,GAAG,IAAG;MACJC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IACpB,CAAC,CACF;EACH;EAAC,QAAAP,CAAA,G;qBAxCUd,iBAAiB,EAAAhB,EAAA,CAAAsC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAxC,EAAA,CAAAsC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjB3B,iBAAiB;IAAA4B,SAAA;IAAAC,MAAA;MAAAjB,QAAA;IAAA;IAAAkB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QC9C9BnD,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,uBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QACvBH,EAAA,CAAAC,cAAA,kBAAgE;QAE5DD,EAAA,CAAAqD,UAAA,IAAAC,0CAAA,2BAKgB;QAGftD,EAAA,CAAAqD,UAAA,IAAAE,0CAAA,2BASe;QAClBvD,EAAA,CAAAG,YAAA,EAAW;;;QApBHH,EAAA,CAAAK,SAAA,GAAyB;QAAzBL,EAAA,CAAAwD,UAAA,eAAAJ,GAAA,CAAAzB,UAAA,CAAyB,gBAAAyB,GAAA,CAAAxC,WAAA;QAUWZ,EAAA,CAAAK,SAAA,GAAc;QAAdL,EAAA,CAAAwD,UAAA,uBAAAJ,GAAA,CAAAvB,QAAA,CAAc;;;;;;;SDmC/Cb,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}