{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component } from '@angular/core';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n//רשימה זמנית\nconst TREE_DATA = [{\n  name: 'Fruit',\n  children: [{\n    name: 'Apple'\n  }, {\n    name: 'Banana'\n  }, {\n    name: 'Fruit loops'\n  }]\n}, {\n  name: 'Vegetables',\n  children: [{\n    name: 'Green',\n    children: [{\n      name: 'Broccoli'\n    }, {\n      name: 'Brussels sprouts'\n    }]\n  }, {\n    name: 'Orange',\n    children: [{\n      name: 'Pumpkins'\n    }, {\n      name: 'Carrots'\n    }]\n  }]\n}];\nlet ListBarComponent = class ListBarComponent {\n  constructor() {\n    this._transformer = (node, level) => {\n      return {\n        expandable: !!node.children && node.children.length > 0,\n        name: node.name,\n        level: level\n      };\n    };\n    this.treeControl = new FlatTreeControl(node => node.level, node => node.expandable);\n    this.treeFlattener = new MatTreeFlattener(this._transformer, node => node.level, node => node.expandable, node => node.children);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.hasChild = (_, node) => node.expandable;\n    this.dataSource.data = TREE_DATA;\n  }\n};\nListBarComponent = __decorate([Component({\n  selector: 'app-list-bar',\n  templateUrl: './list-bar.component.html',\n  styleUrls: ['./list-bar.component.css'],\n  standalone: true,\n  imports: [MatTreeModule, MatButtonModule, MatIconModule]\n})], ListBarComponent);\nexport { ListBarComponent };","map":{"version":3,"names":["FlatTreeControl","Component","MatTreeFlatDataSource","MatTreeFlattener","MatIconModule","MatButtonModule","TREE_DATA","name","children","ListBarComponent","constructor","_transformer","node","level","expandable","length","treeControl","treeFlattener","dataSource","hasChild","_","data","__decorate","selector","templateUrl","styleUrls","standalone","imports","MatTreeModule"],"sources":["C:\\Users\\IMOE001\\Desktop\\nechama\\myProject\\myProject\\src\\app\\list-bar\\list-bar.component.ts"],"sourcesContent":["import {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component} from '@angular/core';\nimport {MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\n\n//הגדרת הרשימה\ninterface FoodNode {\n  name: string;\n  children?: FoodNode[];\n}\n//רשימה זמנית\nconst TREE_DATA: FoodNode[] = [\n  {\n    name: 'Fruit',\n    children: [{name: 'Apple'}, {name: 'Banana'}, {name: 'Fruit loops'}],\n  },\n  {\n    name: 'Vegetables',\n    children: [\n      {\n        name: 'Green',\n        children: [{name: 'Broccoli'}, {name: 'Brussels sprouts'}],\n      },\n      {\n        name: 'Orange',\n        children: [{name: 'Pumpkins'}, {name: 'Carrots'}],\n      },\n    ],\n  },\n];\n//\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n\n@Component({\n  selector: 'app-list-bar',\n  templateUrl: './list-bar.component.html',\n  styleUrls: ['./list-bar.component.css'],\n  standalone: true,\n  imports: [MatTreeModule, MatButtonModule, MatIconModule],\n})\nexport class ListBarComponent {\n  private _transformer = (node: FoodNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      level: level,\n    };\n  };\n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level,\n    node => node.expandable,\n  );\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor() {\n    this.dataSource.data = TREE_DATA;\n  }\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n}\n"],"mappings":";AAAA,SAAQA,eAAe,QAAO,mBAAmB;AACjD,SAAQC,SAAS,QAAO,eAAe;AACvC,SAAQC,qBAAqB,EAAEC,gBAAgB,QAAQ,wBAAwB;AAC/E,SAAQC,aAAa,QAAO,wBAAwB;AACpD,SAAQC,eAAe,QAAO,0BAA0B;AAOxD;AACA,MAAMC,SAAS,GAAe,CAC5B;EACEC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,CAAC;IAACD,IAAI,EAAE;EAAO,CAAC,EAAE;IAACA,IAAI,EAAE;EAAQ,CAAC,EAAE;IAACA,IAAI,EAAE;EAAa,CAAC;CACpE,EACD;EACEA,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE,CACR;IACED,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC;MAACD,IAAI,EAAE;IAAU,CAAC,EAAE;MAACA,IAAI,EAAE;IAAkB,CAAC;GAC1D,EACD;IACEA,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,CAAC;MAACD,IAAI,EAAE;IAAU,CAAC,EAAE;MAACA,IAAI,EAAE;IAAS,CAAC;GACjD;CAEJ,CACF;AAeD,IAAaE,gBAAgB,GAA7B,MAAaA,gBAAgB;EAuB3BC,YAAA;IAtBQ,KAAAC,YAAY,GAAG,CAACC,IAAc,EAAEC,KAAa,KAAI;MACvD,OAAO;QACLC,UAAU,EAAE,CAAC,CAACF,IAAI,CAACJ,QAAQ,IAAII,IAAI,CAACJ,QAAQ,CAACO,MAAM,GAAG,CAAC;QACvDR,IAAI,EAAEK,IAAI,CAACL,IAAI;QACfM,KAAK,EAAEA;OACR;IACH,CAAC;IAED,KAAAG,WAAW,GAAG,IAAIhB,eAAe,CAC/BY,IAAI,IAAIA,IAAI,CAACC,KAAK,EAClBD,IAAI,IAAIA,IAAI,CAACE,UAAU,CACxB;IAED,KAAAG,aAAa,GAAG,IAAId,gBAAgB,CAClC,IAAI,CAACQ,YAAY,EACjBC,IAAI,IAAIA,IAAI,CAACC,KAAK,EAClBD,IAAI,IAAIA,IAAI,CAACE,UAAU,EACvBF,IAAI,IAAIA,IAAI,CAACJ,QAAQ,CACtB;IAED,KAAAU,UAAU,GAAG,IAAIhB,qBAAqB,CAAC,IAAI,CAACc,WAAW,EAAE,IAAI,CAACC,aAAa,CAAC;IAM5E,KAAAE,QAAQ,GAAG,CAACC,CAAS,EAAER,IAAqB,KAAKA,IAAI,CAACE,UAAU;IAH9D,IAAI,CAACI,UAAU,CAACG,IAAI,GAAGf,SAAS;EAClC;CAGD;AA5BYG,gBAAgB,GAAAa,UAAA,EAP5BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B,CAAC;EACvCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACC,aAAa,EAAEvB,eAAe,EAAED,aAAa;CACxD,CAAC,C,EACWK,gBAAgB,CA4B5B;SA5BYA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}