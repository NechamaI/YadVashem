{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass MySerService {\n  constructor(http) {\n    this.http = http;\n    this.URL = \"https://localhost:7224/api/YadVashem/\";\n  }\n  SendLocationServe(location) {\n    let formData = new FormData();\n    formData.append(\"newLocation\", location);\n    return this.http.post(this.URL + \"SendLocationServe\", JSON.stringify(location));\n  }\n  getListToClient() {\n    return this.http.get(this.URL + \"sendListToClient\");\n  }\n  getFileListToClient() {\n    return this.http.get(this.URL + \"SendFileListToClient\");\n  }\n  getTypeFileListToClient() {\n    return this.http.get(this.URL + \"SendTypeFileListToClient\");\n  }\n  static #_ = this.ɵfac = function MySerService_Factory(t) {\n    return new (t || MySerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MySerService,\n    factory: MySerService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { MySerService };","map":{"version":3,"names":["MySerService","constructor","http","URL","SendLocationServe","location","formData","FormData","append","post","JSON","stringify","getListToClient","get","getFileListToClient","getTypeFileListToClient","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\IMOE001\\Desktop\\nechama\\myProject\\myProject\\src\\app\\Service\\my-ser.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MySerService {\n \n  URL=\"https://localhost:7224/api/YadVashem/\"\n\n  constructor(private http:HttpClient) { }\n\n  SendLocationServe(location:string):Observable<any>\n  {\n    let formData = new FormData();\n    formData.append(\"newLocation\", location)\n    return this.http.post<any>(this.URL + \"SendLocationServe\", JSON.stringify(location));\n  }\n\n  getListToClient():Observable<string[]>\n  {\n    return this.http.get<string[]>(this.URL + \"sendListToClient\");\n  }\n\n  getFileListToClient():Observable<string[]>\n  {\n    return this.http.get<string[]>(this.URL + \"SendFileListToClient\");\n  }\n\n  getTypeFileListToClient():Observable<string[]>\n  {\n    return this.http.get<string[]>(this.URL + \"SendTypeFileListToClient\");\n  }\n\n\n\n\n\n}\n"],"mappings":";;AAIA,MAGaA,YAAY;EAIvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,GAAG,GAAC,uCAAuC;EAEJ;EAEvCC,iBAAiBA,CAACC,QAAe;IAE/B,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,QAAQ,CAAC;IACxC,OAAO,IAAI,CAACH,IAAI,CAACO,IAAI,CAAM,IAAI,CAACN,GAAG,GAAG,mBAAmB,EAAEO,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC,CAAC;EACtF;EAEAO,eAAeA,CAAA;IAEb,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAW,IAAI,CAACV,GAAG,GAAG,kBAAkB,CAAC;EAC/D;EAEAW,mBAAmBA,CAAA;IAEjB,OAAO,IAAI,CAACZ,IAAI,CAACW,GAAG,CAAW,IAAI,CAACV,GAAG,GAAG,sBAAsB,CAAC;EACnE;EAEAY,uBAAuBA,CAAA;IAErB,OAAO,IAAI,CAACb,IAAI,CAACW,GAAG,CAAW,IAAI,CAACV,GAAG,GAAG,0BAA0B,CAAC;EACvE;EAAC,QAAAa,CAAA,G;qBA1BUhB,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZrB,YAAY;IAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;IAAAC,UAAA,EAFX;EAAM;;SAEPxB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}