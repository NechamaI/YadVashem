{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass MySerService {\n  constructor(http) {\n    this.http = http;\n    this.URL = \"https://localhost:7224/api/YadVashem/\";\n  }\n  SendLocationServe(location) {\n    let formData = new formda();\n    return this.http.get(this.URL + \"SendLocationServe\");\n  }\n  getListToClient() {\n    return this.http.get(this.URL + \"sendListToClient\");\n  }\n  getFileListToClient() {\n    return this.http.get(this.URL + \"SendFileListToClient\");\n  }\n  getTypeFileListToClient() {\n    return this.http.get(this.URL + \"SendTypeFileListToClient\");\n  }\n  static #_ = this.ɵfac = function MySerService_Factory(t) {\n    return new (t || MySerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MySerService,\n    factory: MySerService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { MySerService };","map":{"version":3,"names":["MySerService","constructor","http","URL","SendLocationServe","location","formData","formda","get","getListToClient","getFileListToClient","getTypeFileListToClient","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\IMOE001\\Desktop\\nechama\\myProject\\myProject\\src\\app\\Service\\my-ser.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MySerService {\n \n  URL=\"https://localhost:7224/api/YadVashem/\"\n\n  constructor(private http:HttpClient) { }\n\n  SendLocationServe(location:string):Observable<any>\n  {\n    let formData = new formda\n    return this.http.get<any>(this.URL + \"SendLocationServe\");\n  }\n\n  getListToClient():Observable<string[]>\n  {\n    return this.http.get<string[]>(this.URL + \"sendListToClient\");\n  }\n\n  getFileListToClient():Observable<string[]>\n  {\n    return this.http.get<string[]>(this.URL + \"SendFileListToClient\");\n  }\n\n  getTypeFileListToClient():Observable<string[]>\n  {\n    return this.http.get<string[]>(this.URL + \"SendTypeFileListToClient\");\n  }\n\n\n\n\n\n}\n"],"mappings":";;AAIA,MAGaA,YAAY;EAIvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,GAAG,GAAC,uCAAuC;EAEJ;EAEvCC,iBAAiBA,CAACC,QAAe;IAE/B,IAAIC,QAAQ,GAAG,IAAIC,MAAM,CAAN,CAAM;IACzB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAM,IAAI,CAACL,GAAG,GAAG,mBAAmB,CAAC;EAC3D;EAEAM,eAAeA,CAAA;IAEb,OAAO,IAAI,CAACP,IAAI,CAACM,GAAG,CAAW,IAAI,CAACL,GAAG,GAAG,kBAAkB,CAAC;EAC/D;EAEAO,mBAAmBA,CAAA;IAEjB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAW,IAAI,CAACL,GAAG,GAAG,sBAAsB,CAAC;EACnE;EAEAQ,uBAAuBA,CAAA;IAErB,OAAO,IAAI,CAACT,IAAI,CAACM,GAAG,CAAW,IAAI,CAACL,GAAG,GAAG,0BAA0B,CAAC;EACvE;EAAC,QAAAS,CAAA,G;qBAzBUZ,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZjB,YAAY;IAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;IAAAC,UAAA,EAFX;EAAM;;SAEPpB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}