{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Service/my-ser.service\";\nimport * as i2 from \"@angular/common\";\nfunction ImgComponent_div_2_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 3);\n  }\n  if (rf & 2) {\n    const img_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", img_r1.name, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ImgComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const img_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"unloud\", img_r1.name, \"\");\n  }\n}\nfunction ImgComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ImgComponent_div_2_img_1_Template, 1, 1, \"img\", 1);\n    i0.ɵɵtemplate(2, ImgComponent_div_2_div_2_Template, 2, 1, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const img_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", img_r1.type == \"jpg\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", img_r1.type == \"no\");\n  }\n}\nclass ImgComponent {\n  constructor(myServe) {\n    this.myServe = myServe;\n    this.imgsList = [];\n    //פונקציה להגדלת תמונה\n    this.itsBig = false;\n  }\n  //שליפת הנתונים שנשמרו בסרבר\n  //ומיון הנתונים לפי קבצים ותקיות\n  ngOnInit() {\n    for (let i = 0; i < this.myServe.node?.children.length; i++) {\n      const element = this.myServe.node.children[i];\n      if (element.type != \"folder\") this.imgsList.push(element);\n    }\n  }\n  makeBig() {\n    this.itsBig = true;\n  }\n  static #_ = this.ɵfac = function ImgComponent_Factory(t) {\n    return new (t || ImgComponent)(i0.ɵɵdirectiveInject(i1.MySerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImgComponent,\n    selectors: [[\"app-img\"]],\n    inputs: {\n      thisNode: \"thisNode\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"width\", \"50px\", \"height\", \"50px\", 3, \"src\", 4, \"ngIf\"], [4, \"ngIf\"], [\"width\", \"50px\", \"height\", \"50px\", 3, \"src\"]],\n    template: function ImgComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"img works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, ImgComponent_div_2_Template, 3, 2, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.imgsList);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { ImgComponent };","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","img_r1","name","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtemplate","ImgComponent_div_2_img_1_Template","ImgComponent_div_2_div_2_Template","type","ImgComponent","constructor","myServe","imgsList","itsBig","ngOnInit","i","node","children","length","element","push","makeBig","_","ɵɵdirectiveInject","i1","MySerService","_2","selectors","inputs","thisNode","decls","vars","consts","template","ImgComponent_Template","rf","ctx","ImgComponent_div_2_Template"],"sources":["C:\\Users\\IMOE001\\Desktop\\nechama\\myProject\\myProject\\src\\app\\Components\\img\\img.component.ts","C:\\Users\\IMOE001\\Desktop\\nechama\\myProject\\myProject\\src\\app\\Components\\img\\img.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { MySerService } from '../../Service/my-ser.service';\n\n@Component({\n  selector: 'app-img',\n  templateUrl: './img.component.html',\n  styleUrls: ['./img.component.css']\n})\nexport class ImgComponent {\n  getTypeFileList: string[] |undefined;\n  getFileList:string[] |undefined;\n\n  imgsList:any[]=[];\n  \n  constructor(private myServe:MySerService){}\n \n  \n  //שליפת הנתונים שנשמרו בסרבר\n  //ומיון הנתונים לפי קבצים ותקיות\n  ngOnInit(){\n    for (let i = 0; i < this.myServe.node?.children.length; i++) {\n      const element = this.myServe.node.children[i];\n      if(element.type!=\"folder\")\n         this.imgsList.push(element);\n    \n    }\n  }\n\n@Input() thisNode:any;\n//פונקציה להגדלת תמונה\n  itsBig:boolean=false;\n  makeBig(){\n    this.itsBig=true;\n  }\n\n}\n","<p>img works!</p>\n<div *ngFor=\"let img of imgsList \">\n<img *ngIf=\"img.type=='jpg'\" [src]=\"img.name\" width=\"50px\" height=\"50px\" />\n<div *ngIf=\"img.type=='no'\">unloud{{img.name}}</div>\n</div>\n\n"],"mappings":";;;;;ICEAA,EAAA,CAAAC,SAAA,aAA2E;;;;IAA9CD,EAAA,CAAAE,UAAA,QAAAC,MAAA,CAAAC,IAAA,EAAAJ,EAAA,CAAAK,aAAA,CAAgB;;;;;IAC7CL,EAAA,CAAAM,cAAA,UAA4B;IAAAN,EAAA,CAAAO,MAAA,GAAkB;IAAAP,EAAA,CAAAQ,YAAA,EAAM;;;;IAAxBR,EAAA,CAAAS,SAAA,GAAkB;IAAlBT,EAAA,CAAAU,kBAAA,WAAAP,MAAA,CAAAC,IAAA,KAAkB;;;;;IAF9CJ,EAAA,CAAAM,cAAA,UAAmC;IACnCN,EAAA,CAAAW,UAAA,IAAAC,iCAAA,iBAA2E;IAC3EZ,EAAA,CAAAW,UAAA,IAAAE,iCAAA,iBAAoD;IACpDb,EAAA,CAAAQ,YAAA,EAAM;;;;IAFAR,EAAA,CAAAS,SAAA,GAAqB;IAArBT,EAAA,CAAAE,UAAA,SAAAC,MAAA,CAAAW,IAAA,UAAqB;IACrBd,EAAA,CAAAS,SAAA,GAAoB;IAApBT,EAAA,CAAAE,UAAA,SAAAC,MAAA,CAAAW,IAAA,SAAoB;;;ADA1B,MAKaC,YAAY;EAMvBC,YAAoBC,OAAoB;IAApB,KAAAA,OAAO,GAAPA,OAAO;IAF3B,KAAAC,QAAQ,GAAO,EAAE;IAiBnB;IACE,KAAAC,MAAM,GAAS,KAAK;EAhBsB;EAG1C;EACA;EACAC,QAAQA,CAAA;IACN,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACJ,OAAO,CAACK,IAAI,EAAEC,QAAQ,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC3D,MAAMI,OAAO,GAAG,IAAI,CAACR,OAAO,CAACK,IAAI,CAACC,QAAQ,CAACF,CAAC,CAAC;MAC7C,IAAGI,OAAO,CAACX,IAAI,IAAE,QAAQ,EACtB,IAAI,CAACI,QAAQ,CAACQ,IAAI,CAACD,OAAO,CAAC;;EAGlC;EAKAE,OAAOA,CAAA;IACL,IAAI,CAACR,MAAM,GAAC,IAAI;EAClB;EAAC,QAAAS,CAAA,G;qBAzBUb,YAAY,EAAAf,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZjB,YAAY;IAAAkB,SAAA;IAAAC,MAAA;MAAAC,QAAA;IAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRzBzC,EAAA,CAAAM,cAAA,QAAG;QAAAN,EAAA,CAAAO,MAAA,iBAAU;QAAAP,EAAA,CAAAQ,YAAA,EAAI;QACjBR,EAAA,CAAAW,UAAA,IAAAgC,2BAAA,iBAGM;;;QAHe3C,EAAA,CAAAS,SAAA,GAAW;QAAXT,EAAA,CAAAE,UAAA,YAAAwC,GAAA,CAAAxB,QAAA,CAAW;;;;;;;SDOnBH,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}